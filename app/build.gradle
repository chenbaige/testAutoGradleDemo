apply plugin: 'com.android.application'

android {

    //签名
    signingConfigs {

        debug {
            storeFile file("../testAutoGradle.jks")
            keyAlias "testAutoGradleDemo"
            storePassword "chen19920929"
            keyPassword "chen19920929"
        }
        release {
            storeFile file("../testAutoGradle.jks")
            keyAlias "testAutoGradleDemo"
            storePassword "chen19920929"
            keyPassword "chen19920929"
        }
    }

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.cbg.testautogradledemo"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        flavorDimensions "default"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            //debuggable true         //!!! remmeber to false
            minifyEnabled true    //混淆
            zipAlignEnabled true  //Zipalign优化
            shrinkResources true  // 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            //将release版本的包名重命名，加上版本及日期
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        outputFileName = "${variant.productFlavors[0].name}_${defaultConfig.versionName}_${releaseTime()}.apk"
                    }
                }
            }

        }
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

//多个版本的打包配置
    productFlavors {
        AppName {
            //applicationId "com.example.helloworld"
            //manifestPlaceholders = [GAO_DE_KEY: "your gaode key1", UMENG_KEY: "your umeng key1"]
        }
        // Version2 {
        //applicationId "com.example.helloworld"
        //manifestPlaceholders = [GAO_DE_KEY: "your gaode key2", UMENG_KEY: "your umeng key2"]
        //}
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude '.readme'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude '!META-INF/MANIFEST.MF'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/maven/com.nineoldandroids/library/pom.xml'
        exclude 'META-INF/maven/com.nineoldandroids/library/pom.properties'

    }

}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def vCode() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
